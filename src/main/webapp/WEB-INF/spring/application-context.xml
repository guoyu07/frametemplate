<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xsi:schemaLocation="
		http://www.springframework.org/schema/jee 
		http://www.springframework.org/schema/jee/spring-jee-3.0.xsd
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-3-0.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

	<import resource="application-datasource.xml" />
	
	<!-- 配置注解实现管理事务（cglib：proxy-target-class="true"） -->
	<!-- <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" /> -->
	
	<!-- 事务管理 -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
   
	<!-- SessionFactory -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan">
			<list>
				<value>com.day.hibernate.domain</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<!-- 1. Hibernate 基本属性 -->
				<!-- Hibernate SQL方言 (hibernate.dialect)  -->
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
				<prop key="hibernate.connection.useUnicode">true</prop>
				<prop key="hibernate.connection.characterEncoding">UTF8</prop>
				<!-- <prop key="hibernate.cglib.use_reflection_optimizer">true</prop>	 -->			
				<prop key="hibernate.bytecode.use_reflection_optimizer">true</prop>
				 
				<!-- 1. Hibernate SQL 调试 -->
				<!-- 在log和console中打印出SQL。 -->
				<!-- <prop key="hibernate.show_sql">true</prop> -->
				<!-- 在log和console中打印出更漂亮的SQL。 -->
				<prop key="hibernate.format_sql">false</prop>
				<!-- Hibernate将在SQL中生成有助于调试的注释信息 -->
				<prop key="hibernate.use_sql_comments">false</prop>		
				
				<!-- 2. Hibernate JDBC和连接(connection)属性 -->
				<!-- Hibernate将收集有助于性能调节的统计数据 -->
				<prop key="hibernate.generate_statistics">true</prop>				
				<!-- 允许Hibernate使用JDBC2的批量更新. -->
				<prop key="hibernate.jdbc.batch_size">50</prop>
				<!-- 指定JDBC抓取数量的大小 (调用Statement.setFetchSize()). -->
				<prop key="hibernate.jdbc.fetch_size">50</prop>
				<!-- 指定Hibernate在何时释放JDBC连接. -->
				<prop key="hibernate.connection.release_mode">after_transaction</prop>
				<!-- 在JDBC读写binary (二进制)或serializable (可序列化) 的类型时使用流(stream)(系统级属性). -->
				<prop key="hibernate.jdbc.use_streams_for_binary">true</prop>
				
				<!--更新表结构  -->
				<prop key="hibernate.hbm2ddl.auto">update</prop>		
			</props>
		</property>
	</bean>
	
</beans>
